version: "3.2"

services:
  
  searx:
    image: searx/searx:latest
    env_file: /var/data/config/searx/searx.env
    #command: ${SEARX_COMMAND:-}
    volumes:
      - /var/data/searx:/etc/searx:rw
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
      - DAC_OVERRIDE
  
    deploy:
      replicas: 1
      labels:
        # traefik
        - traefik.enable=true
        - traefik.docker.network=traefik_public

        # traefikv1
        - traefik.frontend.rule=Host:search.example.com
        - traefik.port=8080
        - traefik.frontend.auth.forward.address=http://traefik-forward-auth:4181
        - traefik.frontend.auth.forward.authResponseHeaders=X-Forwarded-User
        - traefik.frontend.auth.forward.trustForwardHeader=true        

        # traefikv2
        - "traefik.http.routers.searx.rule=Host(`searx.example.com`)"
        - "traefik.http.routers.searx.entrypoints=https"
        - "traefik.http.services.searx.loadbalancer.server.port=8080"
        - "traefik.http.routers.searx.middlewares=forward-auth"
    networks:
      - traefik_public
      - searx
  
  morty:
    image: dalf/morty
    env_file: /var/data/config/searx/morty.env
    command: -timeout 6 -ipv6
    read_only: true
    cap_drop:
      - ALL
    networks:
      - searx
  
  filtron:
    image: dalf/filtron
    env_file: /var/data/config/searx/filtron.env
    command: -listen 0.0.0.0:4040 -api 0.0.0.0:4041 -target searx:8080
    volumes:
      - /var/data/config/searx/rules.json:/etc/filtron/rules.json:rw
    read_only: true
    cap_drop:
      - ALL
    networks:
      - searx

networks:
  traefik_public:
    external: true
  searx:
    ipam:
      config:
        - subnet: 172.16.56.0/24
